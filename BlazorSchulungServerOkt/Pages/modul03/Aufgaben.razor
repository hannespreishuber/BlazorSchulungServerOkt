@page "/todo"
@using System.Text.Json
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment environment
<h3>Aufgaben</h3>
<div class="input-group mb-3">
    <input type="text" class="form-control" placeholder="Aufgabe eingeben" @bind="NeuAufgabe">
    <div class="input-group-append">
        <button class="btn btn-outline-secondary" type="button" @onclick="AddAufgabe">Neu</button>
    </div>
</div>

<ul class="list-group">
    @foreach (var item in ListeAufgaben)
    {
    <li class="list-group-item">
        @if (item.IsEdit)
        {
            <input class="form-control" 
                   @bind="item.Text"
                   @onfocusout="@(()=>Aktualisiere(item))"
                   />
        }
        else
        {
            <input type="checkbox" @bind="item.Erledigt" />
            <span @onclick="()=>item.IsEdit=true"
                  style='@(item.Erledigt?"text-decoration:line-through":"")'>@item.Text</span>
        }


    </li>
    }
</ul>

@code {
    public List<Aufgabe> ListeAufgaben { get; set; } = new List<Aufgabe>();
    public string NeuAufgabe { get; set; }
    void Aktualisiere(Aufgabe a)
    {
        a.IsEdit = false;
        var daten = JsonSerializer.Serialize(ListeAufgaben);
        var pfad = Path.Combine(environment.ContentRootPath, "data/todo.json");
        File.WriteAllText(pfad, daten);
    }

    void AddAufgabe()
    {
        ListeAufgaben.Add(new Aufgabe() { ID = ListeAufgaben.Count() + 1, Text = NeuAufgabe });
        var daten = JsonSerializer.Serialize(ListeAufgaben);
        var pfad = Path.Combine(environment.ContentRootPath, "data/todo.json");
        File.WriteAllText(pfad, daten);
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            var pfad = Path.Combine(environment.ContentRootPath, "data/todo.json");
            var daten = File.ReadAllText(pfad);
            ListeAufgaben= JsonSerializer.Deserialize<List<Aufgabe>>(daten);
            StateHasChanged();

        }
    }
}
